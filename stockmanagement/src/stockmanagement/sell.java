package stockmanagement;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sahil sodhi
 */
public class sell extends javax.swing.JInternalFrame implements myvariables
{

    /**
     * Creates new form sell
     */
    public sell() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jTextField2 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton6 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jTextField6 = new javax.swing.JTextField();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Sell Products");
        setMinimumSize(new java.awt.Dimension(1300, 700));
        setPreferredSize(new java.awt.Dimension(1300, 700));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose Category" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sub Category" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Model Name" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stock Id", "Category", "Subcategory", "Company", "Model Name", "Rate", "Available Units", "Quantity", "Total", "Remaining Units"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Total Amount");

        jButton2.setText("Calculate Bill");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Print");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Company" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel3.setForeground(java.awt.Color.red);
        jLabel3.setText("Customer ID");

        jButton4.setLabel("Details");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel4.setForeground(java.awt.Color.red);
        jLabel4.setText("Customer Name");

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel5.setForeground(java.awt.Color.red);
        jLabel5.setText("Phone");

        jButton5.setText("Save Bill");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Bill No : - ");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Date");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("Date : -");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Date");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setText("Discount (%)");

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Amount Payable");

        jButton6.setText("Remove");

        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        try {
            jFormattedTextField1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(62, 62, 62)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4)
                                .addGap(94, 94, 94)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(jFormattedTextField1)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton6)))
                        .addGap(85, 85, 85)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jButton3)
                .addGap(27, 27, 27)
                .addComponent(jButton5)
                .addGap(699, 699, 699)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField6, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                        .addGap(79, 79, 79))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(38, 38, 38)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jButton3)
                                .addComponent(jButton5))
                            .addComponent(jButton2)))
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
       if(!jComboBox1.getSelectedItem().toString().equals("Choose Category") && jComboBox1.getSelectedItem() != null )
        {
         try
            {
                Connection myconnection ; 
                myconnection=DriverManager.getConnection(path+place,username,password);
                
                try
                {
                String q = "select * from subcategory_table where category_name = ?";
                
                PreparedStatement mystatement  = myconnection.prepareStatement(q);
                
                mystatement.setString(1,jComboBox1.getSelectedItem().toString());
                
                ResultSet myresult = mystatement.executeQuery();
                
                 jComboBox2.removeAllItems();
               
                    if(myresult.next())
                    {
                       
                        jComboBox2.addItem("Choose Subcategory");
                        
                        do
                        {
                            jComboBox2.addItem(myresult.getString("subcategory_name"));
                        }
                        while(myresult.next());

                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane,"Add Subcategory from Misc in Menu Bar");
                    }
                
                        
                }
               
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query , "+e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }
                            
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
            }
        
        }  
     
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        
         if(jComboBox2.getSelectedIndex() != 0 && jComboBox2.getSelectedItem() != null)
        {
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
               {
                String q="select * from stock_table where category = ? and subcategory = ? ";
              
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                mystatement.setString(1,jComboBox1.getSelectedItem().toString());
                
                mystatement.setString(2,jComboBox2.getSelectedItem().toString());
                
                ResultSet myresult = mystatement.executeQuery();
                
                 jComboBox4.removeAllItems();
                 
                 
                    if(myresult.next())
                    {
                        jComboBox4.addItem("Company");
                        
                        
                        do
                        {
                            jComboBox4.addItem(myresult.getString("company"));
                        }
                        while(myresult.next());

                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane,"No Company Found .");
                    }
                    
                
                
                
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
                }
               finally
               {
                   myconnection.close();
               }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
        }
        }
        
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox4ActionPerformed
        
         if(!jComboBox1.getSelectedItem().equals("Choose Category") && !jComboBox2.getSelectedItem().equals("Choose Subcategory") /*&& !jComboBox4.getSelectedItem().equals("Company")*/ && jComboBox4.getSelectedItem() !=null /*&& jComboBox2.getSelectedItem() !=null*/)
        {
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
               {
                String q="select * from stock_table where category = ? and subcategory = ? and company = ?";
              
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                mystatement.setString(1,jComboBox1.getSelectedItem().toString());
                
                mystatement.setString(2,jComboBox2.getSelectedItem().toString());
                mystatement.setString(3,jComboBox4.getSelectedItem().toString());
                ResultSet myresult = mystatement.executeQuery();
                
                jComboBox3.removeAllItems();
                 
                 
                    if(myresult.next())
                    {
                        jComboBox3.addItem("Model Name");
                        
                        
                        do
                        {
                            jComboBox3.addItem(myresult.getString("model"));
                        }
                        while(myresult.next());

                    }
                   
                
                
                
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
                }
               finally
               {
                   myconnection.close();
               }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
        }
        }
        
    }//GEN-LAST:event_jComboBox4ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    
     int r = jTable1.getRowCount();
     
     int avail_units=0,qnt=0;
     double  total_price=0,bill=0,price=0,dis = 0,total_amt = 0;
        
      DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
        
            for (int i =0; i < r; i++) 
              {
                  avail_units=Integer.parseInt(jTable1.getValueAt(i,6).toString());
                  qnt=Integer.parseInt(jTable1.getValueAt(i,7).toString());
                  
                    if(qnt>avail_units)
                    {
                    JOptionPane.showMessageDialog(rootPane,"Quantity entered is greater than the quantity available");
                    }
                    else
                    {

                    price= Double.parseDouble(jTable1.getValueAt(i, 5).toString());

                    total_price = price*qnt;
                    jTable1.setValueAt(total_price, i, 8);

                    int rem = avail_units - qnt;
                    jTable1.setValueAt(rem,i,9);

                    }

              }
        
            for(int i =0 ; i < r ; i++)
            {
                bill = bill + Double.parseDouble(jTable1.getValueAt(i,8).toString());
            }
        
            jTextField5.setText(String.valueOf(bill));
        
            if(jTextField1.getText().equals("0") || jTextField1.getText().equals("") )
            {
                jTextField6.setText(String.valueOf(bill));
            }
            else
            {
            total_amt = bill - ( bill * Double.parseDouble(jTextField1.getText()) ) / 100;
            jTextField6.setText(String.valueOf(total_amt));
            
            }
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
      
     jButton3.setVisible(true);
     try
                 { 
                    
                    Connection myconnection; 
                    myconnection=DriverManager.getConnection(path+place, username, password);
                   
                    try
                  {
                    String q="insert into business_table values(?,?,?,?,?,?,?,?,?,?,?,?,?,?)";
                    PreparedStatement mystatement=myconnection.prepareStatement(q);
                    
                    double t_amt = 0,disp1=0 , disp2=0;
                    String stock_id ="",c_name="",c_id="",phone="",cat="",subcat="",comp="",model="",price="",date="",dis="0",qnt="";
                   
                    mystatement.setString(1,jLabel1.getText());
                    
                    c_id = jTextField2.getText();
                    
                    if(c_id.equals(""))
                    {
                        c_id = "-";
                    }
                    mystatement.setString(2,c_id);
                    mystatement.setString(3,jTextField3.getText());
                    mystatement.setString(4,jFormattedTextField1.getText());
                     
                   
                    
                    
              int r=jTable1.getRowCount();
              
              for(int i=0;i<r;i++)
              {
               stock_id += jTable1.getValueAt(i, 0) + ",";
               cat+= jTable1.getValueAt(i, 1) + ",";
               subcat += jTable1.getValueAt(i, 2) + ",";
               comp += jTable1.getValueAt(i, 3) + ",";
               model += jTable1.getValueAt(i, 4) + ",";
               
               disp1 = Double.parseDouble(jTable1.getValueAt(i, 5).toString());
               disp2 = disp1 - ( ( disp1 *  Double.parseDouble(jTextField1.getText().toString()) ) / 100 );
               price += disp2 + ",";
               
               qnt+= jTable1.getValueAt(i, 7)+",";
               
              }
              
              t_amt = Double.parseDouble(jTextField6.getText().toString());
              
              mystatement.setString(5,stock_id);
              mystatement.setString(6,cat);
               mystatement.setString(7,subcat);
               mystatement.setString(8,comp);
               mystatement.setString(9,model);
               mystatement.setString(10,qnt);
               mystatement.setString(11,price);
               mystatement.setString(13,String.valueOf(t_amt));
               mystatement.setString(14,cdate);
               mystatement.setString(12, jTextField1.getText());
               
               
               int a=mystatement.executeUpdate();
               
               
               if(a>0)
               {
                 JOptionPane.showMessageDialog(rootPane,"Saved Successfully");
                 
                 int r1 = jTable1.getRowCount();
                 
            
                 
                    for (int i = 0; i < r1; i++)
                    {

                            String q2 = "update stock_table set quantity = ? where stock_id = ?";

                            PreparedStatement mystatement2 = myconnection.prepareStatement(q2);

                            mystatement2.setString(1, jTable1.getValueAt(i, 9).toString());
                            mystatement2.setString(2, jTable1.getValueAt(i, 0).toString());


                            mystatement2.executeUpdate();

                     }    
            
               }
                  }
                   catch(Exception e)
                  {
                      JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
                  }
                    finally
                    {
                        myconnection.close();
                    }
                 }catch(Exception e)
                  {
                      JOptionPane.showMessageDialog(rootPane,"Error in connection"+e.getMessage());
                  }
     
        jButton5.setVisible(false);
       
    }//GEN-LAST:event_jButton5ActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
     
        generate_bill_no();
        jLabel8.setText(cdate);
        jButton3.setVisible(false);
        
          try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
               {
                String q="select * from category_table";
              
                PreparedStatement mystatement = myconnection.prepareStatement(q);
               
                ResultSet myresult = mystatement.executeQuery();
                
                while(myresult.next())
                {
                    jComboBox1.addItem(myresult.getString("category_name"));
                    
                }
                   
                
                
//                String q2="select * from company_table";
//              
//                PreparedStatement mystatement2 = myconnection.prepareStatement(q2);
//               
//                ResultSet myresult2 = mystatement2.executeQuery();
//                
//                while(myresult2.next())
//                {
//                    jComboBox4.addItem(myresult2.getString("company_name"));
//                    
//                }
                
                
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
                }
               finally
               {
                   myconnection.close();
               }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
        }
        
        
    }//GEN-LAST:event_formInternalFrameActivated

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
      
                 if(jComboBox1.getSelectedIndex()!=0 && jComboBox2.getSelectedIndex()!=0 && jComboBox3.getSelectedIndex()!=0 && jComboBox4.getSelectedIndex()!=0)
                {
                  try
                 {
                       Connection myconnection;
                      myconnection=DriverManager.getConnection(path+place, username, password);
                    try
                  {
                    String q="select * from stock_table where category=? and subcategory=? and company=? and model = ?";
                    
                    PreparedStatement mystatement=myconnection.prepareStatement(q);
                    mystatement.setString(1, jComboBox1.getSelectedItem().toString());
                    mystatement.setString(2, jComboBox2.getSelectedItem().toString());
                    mystatement.setString(3, jComboBox4.getSelectedItem().toString());
                    mystatement.setString(4, jComboBox3.getSelectedItem().toString());
                     
                    ResultSet myresult=mystatement.executeQuery();
                      
                    DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
                  
                    if(myresult.next())
                     {
                         do
                         {
                       String id=myresult.getString("stock_id");
                      
                       String cat=myresult.getString("category");
                       String subcat=myresult.getString("subcategory");
                       String comp=myresult.getString("company");
                       String model=myresult.getString("model");
                       String qt=myresult.getString("quantity");
                       String req="1";
                       int r = Integer.parseInt(qt);
                       r--;
                       
                       String price=myresult.getString("price");
                       mymodel.addRow(new Object[]{id,cat,subcat,comp,model,price,qt,req,price,r});
                         }
                         while(myresult.next());
                      }
                  }
                    catch(Exception e)
               {
                   JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
               }
                 }catch(Exception e)
                 {
                    JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage()); 
                 }
                }
                  
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

     void generate_bill_no()
    {
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
               {
                String q="select max(bill_no) from business_table";
              
                PreparedStatement mystatement = myconnection.prepareStatement(q);
               
                ResultSet myresult = mystatement.executeQuery();
                
                if(myresult.next())
                {
                    int bill_no = myresult.getInt(1);
                    
                    if(bill_no == 0)
                    {
                        bill_no = 10000;
                    }
                    jLabel1.setText(String.valueOf(++bill_no));
                }
                else
                {
                    jLabel1.setText("1");
                
                }
                
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
                }
               finally
               {
                   myconnection.close();
               }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
        }
    
    
    
    
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
