package stockmanagement;
import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import static stockmanagement.myvariables.password;
import static stockmanagement.myvariables.path;
import static stockmanagement.myvariables.place;
import static stockmanagement.myvariables.username;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sahil sodhi
 */
public class all_stock extends javax.swing.JInternalFrame implements myvariables  {

    /**
     * Creates new form all_stock
     */
    public all_stock() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jComboBox4 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("All Stock Information");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose Category" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose Sub Category" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Company" }));
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Model Name" }));

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Stock Id", "Category", "Sub Category", "Company", "Model Name", "Price", "Available Units"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(jButton1)
                        .addGap(0, 360, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(457, 457, 457)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
        if(!jComboBox1.getSelectedItem().toString().equals("Choose Category") && jComboBox1.getSelectedItem() != null )
        {
         try
            {
                Connection myconnection ; 
                myconnection=DriverManager.getConnection(path+place,username,password);
                
                try
                {
                String q = "select * from subcategory_table where category_name = ?";
                
                PreparedStatement mystatement  = myconnection.prepareStatement(q);
                
                mystatement.setString(1,jComboBox1.getSelectedItem().toString());
                
                ResultSet myresult = mystatement.executeQuery();
                
                 jComboBox2.removeAllItems();
               
                    if(myresult.next())
                    {
                       
                        jComboBox2.addItem("Choose Subcategory");
                        
                        do
                        {
                            jComboBox2.addItem(myresult.getString("subcategory_name"));
                        }
                        while(myresult.next());

                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane,"Add Subcategory from Misc in Menu Bar");
                    }
                
                        
                }
               
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query , "+e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }
                            
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
            }
        
        }  
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
       
         try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
               {
                String q="select * from category_table";
              
                PreparedStatement mystatement = myconnection.prepareStatement(q);
               
                ResultSet myresult = mystatement.executeQuery();
                
                while(myresult.next())
                {
                    jComboBox1.addItem(myresult.getString("category_name"));
                    
                }
                   
            
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
                }
               finally
               {
                   myconnection.close();
               }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
        }
        
    }//GEN-LAST:event_formInternalFrameActivated

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
       
          
         if(jComboBox2.getSelectedIndex() != 0 && jComboBox2.getSelectedItem() != null)
        {
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
               {
                String q="select * from stock_table where category = ? and subcategory = ? ";
              
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                mystatement.setString(1,jComboBox1.getSelectedItem().toString());
                
                mystatement.setString(2,jComboBox2.getSelectedItem().toString());
                
                ResultSet myresult = mystatement.executeQuery();
                
                 jComboBox4.removeAllItems();
                 
                 
                    if(myresult.next())
                    {
                        jComboBox4.addItem("Company");
                        
                        
                        do
                        {
                            jComboBox4.addItem(myresult.getString("company"));
                        }
                        while(myresult.next());

                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane,"No Company Found .");
                    }
                    
                
                
                
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
                }
               finally
               {
                   myconnection.close();
               }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
        }
        }
        
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox3ActionPerformed
        
         if(!jComboBox1.getSelectedItem().equals("Choose Category") && !jComboBox2.getSelectedItem().equals("Choose Subcategory") /*&& !jComboBox4.getSelectedItem().equals("Company")*/ && jComboBox4.getSelectedItem() !=null /*&& jComboBox2.getSelectedItem() !=null*/)
        {
        try
        {
            Connection myconnection;
            myconnection = DriverManager.getConnection(path+place,username,password);
            
            try
               {
                String q="select * from stock_table where category = ? and subcategory = ? and company = ?";
              
                PreparedStatement mystatement = myconnection.prepareStatement(q);
                mystatement.setString(1,jComboBox1.getSelectedItem().toString());
                
                mystatement.setString(2,jComboBox2.getSelectedItem().toString());
                mystatement.setString(3,jComboBox4.getSelectedItem().toString());
                ResultSet myresult = mystatement.executeQuery();
                
                jComboBox3.removeAllItems();
                 
                 
                    if(myresult.next())
                    {
                        jComboBox3.addItem("Model Name");
                        
                        
                        do
                        {
                            jComboBox3.addItem(myresult.getString("model"));
                        }
                        while(myresult.next());

                    }
                   
                
                
                
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
                }
               finally
               {
                   myconnection.close();
               }
            
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection "+e.getMessage());
        }
        }
        
    }//GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
         if(jComboBox1.getSelectedIndex()!=0 && jComboBox2.getSelectedIndex()!=0 && jComboBox3.getSelectedIndex()!=0 && jComboBox4.getSelectedIndex()!=0)
                {
                  try
                 {
                       Connection myconnection;
                      myconnection=DriverManager.getConnection(path+place, username, password);
                    try
                  {
                    String q="select * from stock_table where category=? and subcategory=? and company=? and model = ?";
                    
                    PreparedStatement mystatement=myconnection.prepareStatement(q);
                    mystatement.setString(1, jComboBox1.getSelectedItem().toString());
                    mystatement.setString(2, jComboBox2.getSelectedItem().toString());
                    mystatement.setString(3, jComboBox4.getSelectedItem().toString());
                    mystatement.setString(4, jComboBox3.getSelectedItem().toString());
                     
                    ResultSet myresult=mystatement.executeQuery();
                      
                    DefaultTableModel mymodel=(DefaultTableModel)jTable1.getModel();
                  
                    if(myresult.next())
                     {
                         do
                         {
                       String id=myresult.getString("stock_id");
                      
                       String cat=myresult.getString("category");
                       String subcat=myresult.getString("subcategory");
                       String comp=myresult.getString("company");
                       String model=myresult.getString("model");
                      
                       String price=myresult.getString("price");
                       mymodel.addRow(new Object[]{id,cat,subcat,comp,model,price,price});
                         }
                         while(myresult.next());
                      }
                  }
                    catch(Exception e)
               {
                   JOptionPane.showMessageDialog(rootPane,"Error in query"+e.getMessage());
               }
                 }catch(Exception e)
                 {
                    JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage()); 
                 }
                }
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
